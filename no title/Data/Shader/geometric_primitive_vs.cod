//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CONSTANT_BUFFER
// {
//
//   row_major float4x4 wvp;            // Offset:    0 Size:    64
//   row_major float4x4 world;          // Offset:   64 Size:    64
//   float4 material_color;             // Offset:  128 Size:    16
//   float4 light_direction;            // Offset:  144 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// CONSTANT_BUFFER                   cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyzw        1     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0             0         7  ( FLT, FLT, FLT, FLT)
// c8         cb0             8         2  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_x
    def c10, 0, 0, 0, 0
    dcl_texcoord v0  // pos<0,1,2,3>
    dcl_texcoord1 v1  // normal<0,1,2,3>

#line 8 "C:\Users\2190195\Desktop\„ÉÅ„ÅE„É†Âà∂‰Ωú„ÄÄÂÄâÂ∫´\3PK\no title\Data\Shader\geometric_primitive_vs.hlsl"
    mul r0, v0.x, c1
    mul r1, v0.y, c2
    add r0, r0, r1
    mul r1, v0.z, c3
    add r0, r0, r1
    mul r1, v0.w, c4
    add r0, r0, r1  // ::vout<0,1,2,3>

#line 11
    mul r1, v1.x, c5
    mul r2, v1.y, c6
    add r1, r1, r2
    mul r2, v1.z, c7
    add r1, r1, r2
    add r1, r1, c10.x
    dp4 r2.x, r1, r1
    rsq r2.x, r2.x
    mul r1, r1, r2.x  // ::N<0,1,2,3>
    mov r2, -c9
    dp4 r3.x, r2, r2
    rsq r3.x, r3.x
    mul r2, r2, r3.x  // ::L<0,1,2,3>
    dp4 r1.x, r2, r1
    max r1.x, r1.x, c10.x
    mul r1.xyz, r1.x, c8  // ::vout<4,5,6>
    mov r1.w, c8.w  // ::vout<7>
    mov oT0.xyz, r1  // ::main<4,5,6>
    mov oT0.w, r1.w  // ::main<7>
    mov r0, r0  // ::main<0,1,2,3>

#line 4
    mul r1.xy, r0.w, c0
    add oPos.xy, r0, r1  // ::main<0,1>
    mov oPos.zw, r0  // ::main<2,3>

// approximately 30 instruction slots used
vs_4_0
dcl_constantbuffer CB0[10], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_temps 4
//
// Initial variable locations:
//   v0.x <- pos.x; v0.y <- pos.y; v0.z <- pos.z; v0.w <- pos.w; 
//   v1.x <- normal.x; v1.y <- normal.y; v1.z <- normal.z; v1.w <- normal.w; 
//   o1.x <- <main return value>.color.x; o1.y <- <main return value>.color.y; o1.z <- <main return value>.color.z; o1.w <- <main return value>.color.w; 
//   o0.x <- <main return value>.position.x; o0.y <- <main return value>.position.y; o0.z <- <main return value>.position.z; o0.w <- <main return value>.position.w
//
#line 8 "C:\Users\2190195\Desktop\„ÉÅE"
mul r0.xyzw, v0.xxxx, cb0[0].xyzw
mul r1.xyzw, v0.yyyy, cb0[1].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw
mul r1.xyzw, v0.zzzz, cb0[2].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw
mul r1.xyzw, v0.wwww, cb0[3].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw  // r0.x <- vout.position.x; r0.y <- vout.position.y; r0.z <- vout.position.z; r0.w <- vout.position.w

#line 10
itof r1.x, l(0)  // r1.x <- normal.w

#line 11
mul r2.xyzw, v1.xxxx, cb0[4].xyzw
mul r3.xyzw, v1.yyyy, cb0[5].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, v1.zzzz, cb0[6].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r1.xyzw, r1.xxxx, cb0[7].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
dp4 r2.x, r1.xyzw, r1.xyzw
rsq r2.x, r2.x
mul r1.xyzw, r1.xyzw, r2.xxxx  // r1.x <- N.x; r1.y <- N.y; r1.z <- N.z; r1.w <- N.w

#line 12
mov r2.xyzw, -cb0[9].xyzw
dp4 r3.x, r2.xyzw, r2.xyzw
rsq r3.x, r3.x
mul r2.xyzw, r2.xyzw, r3.xxxx  // r2.x <- L.x; r2.y <- L.y; r2.z <- L.z; r2.w <- L.w

#line 14
itof r3.x, l(0)
dp4 r1.x, r2.xyzw, r1.xyzw
max r1.x, r1.x, r3.x
mul r1.xyz, r1.xxxx, cb0[8].xyzx  // r1.x <- vout.color.x; r1.y <- vout.color.y; r1.z <- vout.color.z

#line 15
mov r1.w, cb0[8].w  // r1.w <- vout.color.w

#line 17
mov o0.xyzw, r0.xyzw
mov o1.xyz, r1.xyzx
mov o1.w, r1.w
ret 
// Approximately 31 instruction slots used
