#include	"wave.h"


/*******************************************************************************
TODO:06 WAVE管理用のデータを作成する
説明	オリジナルモデルや敵出現(WAVE管理)データをここで定義する
		このようなデータはSTAGE毎に用意する事となるので、
		膨大なデータを多数作成する事が予想される場合、
		それ単体で.cppを作成すると、ソース管理が容易になる
--------------------------------------------------------------------------------
手順    以下の処理のコメントを外し、適切な形に修正せよ
		また、何をしているのかを確認せよ
		更に、必要に応じてプログラムを各所に追加せよ
*******************************************************************************/
char*	modelNames01[] = 
{
	"Data\\tank.fbx",		//	00:戦車
	NULL					//	終端
};

//WAVEフラグ込み敵設定構造体 
Wave waveData01[] = 
{
//	  番号    ﾓﾃﾞﾙ 座標X,Z    角度   色　　HP
	{ 0,	  0,	-5,	+5,	  180,	 DirectX::XMFLOAT4(1.0f,0,0,1.0f), 3 },
	{ 0,	  0,	 0,	+5,	  180,	 DirectX::XMFLOAT4(1.0f,0,0,1.0f), 3 },
	{ 0,	  0,	+5,	-5,	  180,	 DirectX::XMFLOAT4(1.0f,0,0,1.0f), 3 },
	{ 0,	  0,   -10,	+7,	  180,	 DirectX::XMFLOAT4(1.0f,0,0,1.0f), 3 },
	{ 0,	  0,	 3, +9,   180,	 DirectX::XMFLOAT4(1.0f,0,0,1.0f), 3 },
	{ 0,	  0,   -12, -6,	  180,	 DirectX::XMFLOAT4(1.0f,0,0,1.0f), 3 },
	{ 0,	  0,	-5,-12,	  180,	 DirectX::XMFLOAT4(1.0f,0,0,1.0f), 3 },
	{ 0,	  0,	+9,+14,	  180,	 DirectX::XMFLOAT4(1.0f,0,0,1.0f), 3 },
	{ 0,	  0,	+11,-9,	  180,	 DirectX::XMFLOAT4(1.0f,0,0,1.0f), 3 },
																	   
	{ 1,	  0,	-3, +3,	  180,	 DirectX::XMFLOAT4(0,1.0f,0,1.0f), 3 },
	{ 1,	  0,	+7,	+5,	  180,	 DirectX::XMFLOAT4(0,1.0f,0,1.0f), 3 },
	{ 1,	  0,   -11,	+9,	  180,	 DirectX::XMFLOAT4(0,1.0f,0,1.0f), 3 },
	{ 1,	  0,   +13,+11,	  180,	 DirectX::XMFLOAT4(0,1.0f,0,1.0f), 3 },
	{ 1,	  0,	-9,	-7,	  180,	 DirectX::XMFLOAT4(0,1.0f,0,1.0f), 3 },
	{ 1,	  0,   +11,	-9,	  180,	 DirectX::XMFLOAT4(0,1.0f,0,1.0f), 3 },
	{ 1,	  0,	-7,-15,	  180,	 DirectX::XMFLOAT4(0,1.0f,0,1.0f), 3 },
	{ 1,	  0,   -15,-11,	  180,	 DirectX::XMFLOAT4(0,1.0f,0,1.0f), 3 },
																	   
	{ 2,	  0,	-3, -3,	  180,	 DirectX::XMFLOAT4(0,0,1.0f,1.0f), 3 },
	{ 2,	  0,	-7,	+5,	  180,	 DirectX::XMFLOAT4(0,0,1.0f,1.0f), 3 },
	{ 2,	  0,   +11,	-9,	  180,	 DirectX::XMFLOAT4(0,0,1.0f,1.0f), 3 },
	{ 2,	  0,   +13,+11,	  180,	 DirectX::XMFLOAT4(0,0,1.0f,1.0f), 3 },
	{ 2,	  0,	-9,	-7,	  180,	 DirectX::XMFLOAT4(0,0,1.0f,1.0f), 3 },
	{ 2,	  0,   -11,	+9,	  180,	 DirectX::XMFLOAT4(0,0,1.0f,1.0f), 3 },
	{ 2,	  0,	+7,-15,	  180,	 DirectX::XMFLOAT4(0,0,1.0f,1.0f), 3 },
	{ 2,	  0,   -15,+11,	  180,	 DirectX::XMFLOAT4(0,0,1.0f,1.0f), 3 },

	{ 3,	  0,	 0,+10,	  180,	 DirectX::XMFLOAT4(1.0f,1.0f,1.0f,1.0f), 70 },

	{ -1,	-1,	0, 0, 0,	DirectX::XMFLOAT4(0,0,0,0) }		//	終端
};
